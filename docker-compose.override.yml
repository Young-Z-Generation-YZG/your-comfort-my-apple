services:
    ygz.gateways.yarp:
        container_name: ygz.gateways.yarp
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_HTTP_PORTS=8080
          - ASPNETCORE_HTTPS_PORTS=8081
          - OTEL_EXPORTER_OTLP_ENDPOINT=http://ygz.jaeger.opentelemetry:4317
        ports:
          - "6006:8080"
          - "6066:8081"
        # depends_on:
        #     - ygz.identity.api
        #   # - ygz.catalog.api
        #   # - ygz.basket.api
        #   # - ygz.ordering.api
        volumes:
          - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
          - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
        networks:
        - app-network
    
    ygz.seq:
        environment:
            - ACCEPT_EULA=Y
        ports:
            - "16060:8080"
        networks:
        - app-network

    ygz.jaeger.opentelemetry:
        container_name: ygz.jaeger.opentelemetry
        ports:
            - "4317:4317"
            - "4318:4318" 
            - "16686:16686"
        networks:
        - app-network

    db.keycloak:
        container_name: db.keycloak
        environment:
        - POSTGRES_USER=bale
        - POSTGRES_PASSWORD=bale
        - POSTGRES_DB=KeycloakDb
        restart: always
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U bale -d KeycloakDb"]
            interval: 5s
            timeout: 5s
            retries: 5
        ports:
        - "1432:5432"
        volumes:
        - postgres_keycloak:/var/lib/postgresql/data/
        networks:
        - app-network

    db.identity:
        container_name: db.identity
        environment:
        - POSTGRES_USER=bale
        - POSTGRES_PASSWORD=bale
        - POSTGRES_DB=IdentityDb
        restart: always
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U bale -d IdentityDb"]
            interval: 5s
            timeout: 5s
            retries: 5
        ports:
        - "2432:5432"
        volumes:
        - postgres_identity:/var/lib/postgresql/data/
        networks:
        - app-network

    ygz.keycloak.server:
        container_name: ygz.keycloak.server
        command:
            [
                'start-dev',
                '--import-realm',
                '--log-level=DEBUG,org.hibernate:info,org.keycloak.transaction.JtaTransactionWrapper:info,org.keycloak.services.scheduled.ScheduledTaskRunner:info',
                '--log-console-color=true',
                '--hostname=http://localhost:17070',
                '--hostname-backchannel-dynamic=true'
            ]
        environment:
        - KEYCLOAK_ADMIN=admin
        - KEYCLOAK_ADMIN_PASSWORD=admin
        - KC_HEALTH_ENABLED=true
        - KC_DB=postgres
        - KC_DB_URL=jdbc:postgresql://db.keycloak:5432/KeycloakDb
        - KC_DB_USERNAME=bale
        - KC_DB_PASSWORD=bale
        restart: always
        depends_on:
        - db.keycloak
        ports:
        - "17070:8080"
        networks:
        - app-network

    ygz.keycloak.api:
        container_name: ygz.keycloak.api
        environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_HTTP_PORTS=8080
        - ASPNETCORE_HTTPS_PORTS=8081
        - ConnectionStrings__IdentityDb=Host=db.identity;Port=5432;Database=IdentityDb;Username=bale;Password=bale
        - OTEL_EXPORTER_OTLP_ENDPOINT=http://ygz.jaeger.opentelemetry:4317
        ports:
        - "6005:8080"
        - "6065:8081"
        depends_on:
        - db.identity
        volumes:
        - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
        - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
        networks:
        - app-network

  # catalogdb:
  #   image: mongo:latest
  #   container_name: mongodb
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=bale
  #     - MONGO_INITDB_ROOT_PASSWORD=bale
  #   restart: always
  #   ports:
  #     - "37017:27017"
  #   volumes:
  #     - mongodb_catalog:/data/db

  # basketdb:
  #   image: postgres:alpine
  #   container_name: basketdb
  #   environment:
  #     - POSTGRES_USER=bale
  #     - POSTGRES_PASSWORD=bale
  #     - POSTGRES_DB=BasketDb
  #   restart: always
  #   ports:
  #     - "6432:5432"
  #   volumes:
  #     - postgres_basket:/var/lib/postgresql/data/

  # discountdb:
  #   image: postgres:alpine
  #   container_name: discountdb
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: DiscountDb
  #   restart: always
  #   ports:
  #     - "7432:5432"
  #   volumes:
  #     - postgres_discount:/var/lib/postgresql/data/

  # orderingdb:
  #   image: postgres:alpine
  #   container_name: orderingdb
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: OrderingDb
  #   restart: always
  #   ports:
  #     - "8432:5432"
  #   volumes:
  #     - postgres_ordering:/var/lib/postgresql/data/

  # distributedcache:
  #   image: redis:alpine
  #   container_name: distributedcache
  #   restart: always
  #   ports:
  #     - "6379:6379"

  # messagebroker:
  #   container_name: messagebroker
  #   hostname: rabbitmq-host
  #   restart: always
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   expose:
  #     - 5672
  #     - 15672
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=guest
  #     - RABBITMQ_DEFAULT_PASS=guest
  #   healthcheck:
  #     test: ["CMD", "rabbitmqctl", "status"]
  #     interval: 5s
  #     timeout: 20s
  #     retries: 5

  # ygz.catalog.api:
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_HTTP_PORTS=8080
  #     - ASPNETCORE_HTTPS_PORTS=8081
  #     - CatalogDbSettings__ConnectionString=mongodb://bale:bale@mongodb:27017/?safe=true&connect=replicaset
  #     - CatalogDbSettings__DatabaseName=catalogDb
  #     - MessageBrokerSettings__Host=amqp://rabbitmq-host:5672
  #     - MessageBrokerSettings__Username=guest
  #     - MessageBrokerSettings__Password=guest
  #   restart: on-failure
  #   depends_on:
  #     messagebroker:
  #       condition: service_healthy
  #     catalogdb:
  #       condition: service_started
  #   ports:
  #     - "6001:8080"
  #     - "6061:8081"
  #   volumes:
  #     - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
  #     - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  # ygz.basket.api:
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_HTTP_PORTS=8080
  #     - ASPNETCORE_HTTPS_PORTS=8081
  #     - ConnectionStrings__BasketDb=Host=basketdb;Port=5432;Database=BasketDb;Username=postgres;Password=postgres
  #     - ConnectionStrings__Redis=distributedcache:6379
  #     - MessageBrokerSettings__Host=amqp://rabbitmq-host:5672
  #     - MessageBrokerSettings__Username=guest
  #     - MessageBrokerSettings__Password=guest
  #     - GrpcSettings__DiscountUrl=https://gyz.discount.grpc:8081
  #   restart: always
  #   depends_on:
  #     basketdb:
  #       condition: service_started
  #     distributedcache:
  #       condition: service_started
  #     messagebroker:
  #       condition: service_healthy
  #     gyz.discount.grpc:
  #       condition: service_started
  #   ports:
  #     - "6002:8080"
  #     - "6062:8081"
  #   volumes:
  #     - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
  #     - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  # gyz.discount.grpc:
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_HTTP_PORTS=8080
  #     - ASPNETCORE_HTTPS_PORTS=8081
  #     - ConnectionStrings__DiscountDb=Host=discountdb;Port=5432;Database=DiscountDb;Username=postgres;Password=postgres
  #   depends_on:
  #     discountdb:
  #       condition: service_started
  #   ports:
  #     - "6003:8080"
  #     - "6063:8081"
  #   volumes:
  #     - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
  #     - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  # ygz.ordering.api:
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_HTTP_PORTS=8080
  #     - ASPNETCORE_HTTPS_PORTS=8081
  #     - ConnectionStrings__OrderingDb=Host=orderingdb;Port=5432;Database=OrderingDb;Username=postgres;Password=postgres
  #     - MessageBrokerSettings__Host=amqp://rabbitmq-host:5672
  #     - MessageBrokerSettings__UserName=guest
  #     - MessageBrokerSettings__Password=guest
  #     - FeatureManagement__OrderFullfilment=false
  #   restart: on-failure
  #   depends_on:
  #     orderingdb:
  #       condition: service_started
  #     messagebroker:
  #       condition: service_healthy
  #   ports:
  #     - "6004:8080"
  #     - "6064:8081"
  #   volumes:
  #     - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
  #     - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro


volumes:
  postgres_identity:
  postgres_keycloak:
#   mongodb_catalog:
#   postgres_basket:
#   postgres_discount:
#   postgres_ordering:

networks:
  app-network:
    name: app-network
    driver: bridge